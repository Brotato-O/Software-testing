{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Generic API helper functions\nconst apiHelper = {\n  // GET all items from endpoint\n  getAll: async endpoint => {\n    try {\n      const response = await api.get(endpoint);\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n        message: `Failed to fetch ${endpoint}`\n      };\n    }\n  },\n  // GET single item by id\n  getById: async (endpoint, id) => {\n    try {\n      const response = await api.get(`${endpoint}/${id}`);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n        message: `Failed to fetch item ${id}`\n      };\n    }\n  },\n  // POST create new item\n  create: async (endpoint, data) => {\n    try {\n      const response = await api.post(endpoint, data);\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || {\n        message: `Failed to create ${endpoint}`\n      };\n    }\n  },\n  // PUT update item by id\n  update: async (endpoint, id, data) => {\n    try {\n      const response = await api.put(`${endpoint}/${id}`, data);\n      return response.data;\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || {\n        message: `Failed to update item ${id}`\n      };\n    }\n  },\n  // DELETE item by id\n  delete: async (endpoint, id) => {\n    try {\n      await api.delete(`${endpoint}/${id}`);\n    } catch (error) {\n      var _error$response5;\n      throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || {\n        message: `Failed to delete item ${id}`\n      };\n    }\n  }\n};\n\n// Export generic helper for reuse\nexport { apiHelper };\n\n// ============================================\n// SPECIFIC API FUNCTIONS\n// ============================================\n\n// Auth API\nexport const authAPI = {\n  login: (username, password) => apiHelper.create('/auth/login', {\n    username,\n    password\n  })\n};\n\n// Products API\nexport const productsAPI = {\n  getAll: () => apiHelper.getAll('/products'),\n  getById: id => apiHelper.getById('/products', id),\n  create: product => apiHelper.create('/products', product),\n  update: (id, product) => apiHelper.update('/products', id, product),\n  delete: id => apiHelper.delete('/products', id)\n};\n\n// Legacy exports for backward compatibility\nexport const login = authAPI.login;\nexport const getProducts = productsAPI.getAll;\nexport const getProduct = productsAPI.getById;\nexport const createProduct = productsAPI.create;\nexport const updateProduct = productsAPI.update;\nexport const deleteProduct = productsAPI.delete;\n\n// ============================================\n// EXAMPLES: Add more APIs easily\n// ============================================\n\n// Categories API (example for future use)\nexport const categoriesAPI = {\n  getAll: () => apiHelper.getAll('/categories'),\n  getById: id => apiHelper.getById('/categories', id),\n  create: category => apiHelper.create('/categories', category),\n  update: (id, category) => apiHelper.update('/categories', id, category),\n  delete: id => apiHelper.delete('/categories', id)\n};\n\n// Users API (example for future use)\nexport const usersAPI = {\n  getAll: () => apiHelper.getAll('/users'),\n  getById: id => apiHelper.getById('/users', id),\n  create: user => apiHelper.create('/users', user),\n  update: (id, user) => apiHelper.update('/users', id, user),\n  delete: id => apiHelper.delete('/users', id)\n};\n\n// Orders API (example for future use)\nexport const ordersAPI = {\n  getAll: () => apiHelper.getAll('/orders'),\n  getById: id => apiHelper.getById('/orders', id),\n  create: order => apiHelper.create('/orders', order),\n  update: (id, order) => apiHelper.update('/orders', id, order),\n  delete: id => apiHelper.delete('/orders', id),\n  // Custom endpoint for orders\n  getByUserId: userId => apiHelper.getAll(`/orders/user/${userId}`)\n};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","apiHelper","getAll","endpoint","response","get","data","error","_error$response","message","getById","id","_error$response2","post","_error$response3","update","put","_error$response4","delete","_error$response5","authAPI","login","username","password","productsAPI","product","getProducts","getProduct","createProduct","updateProduct","deleteProduct","categoriesAPI","category","usersAPI","user","ordersAPI","order","getByUserId","userId"],"sources":["C:/Users/Dell/OneDrive/Desktop/test/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080/api';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Generic API helper functions\r\nconst apiHelper = {\r\n    // GET all items from endpoint\r\n    getAll: async (endpoint) => {\r\n        try {\r\n            const response = await api.get(endpoint);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || { message: `Failed to fetch ${endpoint}` };\r\n        }\r\n    },\r\n\r\n    // GET single item by id\r\n    getById: async (endpoint, id) => {\r\n        try {\r\n            const response = await api.get(`${endpoint}/${id}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || { message: `Failed to fetch item ${id}` };\r\n        }\r\n    },\r\n\r\n    // POST create new item\r\n    create: async (endpoint, data) => {\r\n        try {\r\n            const response = await api.post(endpoint, data);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || { message: `Failed to create ${endpoint}` };\r\n        }\r\n    },\r\n\r\n    // PUT update item by id\r\n    update: async (endpoint, id, data) => {\r\n        try {\r\n            const response = await api.put(`${endpoint}/${id}`, data);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || { message: `Failed to update item ${id}` };\r\n        }\r\n    },\r\n\r\n    // DELETE item by id\r\n    delete: async (endpoint, id) => {\r\n        try {\r\n            await api.delete(`${endpoint}/${id}`);\r\n        } catch (error) {\r\n            throw error.response?.data || { message: `Failed to delete item ${id}` };\r\n        }\r\n    }\r\n};\r\n\r\n// Export generic helper for reuse\r\nexport { apiHelper };\r\n\r\n// ============================================\r\n// SPECIFIC API FUNCTIONS\r\n// ============================================\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n    login: (username, password) => \r\n        apiHelper.create('/auth/login', { username, password })\r\n};\r\n\r\n// Products API\r\nexport const productsAPI = {\r\n    getAll: () => apiHelper.getAll('/products'),\r\n    getById: (id) => apiHelper.getById('/products', id),\r\n    create: (product) => apiHelper.create('/products', product),\r\n    update: (id, product) => apiHelper.update('/products', id, product),\r\n    delete: (id) => apiHelper.delete('/products', id)\r\n};\r\n\r\n// Legacy exports for backward compatibility\r\nexport const login = authAPI.login;\r\nexport const getProducts = productsAPI.getAll;\r\nexport const getProduct = productsAPI.getById;\r\nexport const createProduct = productsAPI.create;\r\nexport const updateProduct = productsAPI.update;\r\nexport const deleteProduct = productsAPI.delete;\r\n\r\n// ============================================\r\n// EXAMPLES: Add more APIs easily\r\n// ============================================\r\n\r\n// Categories API (example for future use)\r\nexport const categoriesAPI = {\r\n    getAll: () => apiHelper.getAll('/categories'),\r\n    getById: (id) => apiHelper.getById('/categories', id),\r\n    create: (category) => apiHelper.create('/categories', category),\r\n    update: (id, category) => apiHelper.update('/categories', id, category),\r\n    delete: (id) => apiHelper.delete('/categories', id)\r\n};\r\n\r\n// Users API (example for future use)\r\nexport const usersAPI = {\r\n    getAll: () => apiHelper.getAll('/users'),\r\n    getById: (id) => apiHelper.getById('/users', id),\r\n    create: (user) => apiHelper.create('/users', user),\r\n    update: (id, user) => apiHelper.update('/users', id, user),\r\n    delete: (id) => apiHelper.delete('/users', id)\r\n};\r\n\r\n// Orders API (example for future use)\r\nexport const ordersAPI = {\r\n    getAll: () => apiHelper.getAll('/orders'),\r\n    getById: (id) => apiHelper.getById('/orders', id),\r\n    create: (order) => apiHelper.create('/orders', order),\r\n    update: (id, order) => apiHelper.update('/orders', id, order),\r\n    delete: (id) => apiHelper.delete('/orders', id),\r\n    // Custom endpoint for orders\r\n    getByUserId: (userId) => apiHelper.getAll(`/orders/user/${userId}`)\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}